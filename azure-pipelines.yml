# Definição da pipeline e disparadores
name: 'Calculator CI'
trigger:
  branches:
    include:
      - main  # Execute a pipeline para cada commit na branch 'main'

# Definição de variáveis
variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'  # Defina a plataforma como Any CPU

# Jobs e etapas
jobs:
- job: Build
  pool:
    vmImage: 'windows-2019'  # Alterado para Windows Server 2022

  steps:
    # Etapa 1: Instalar .NET SDK 8.0
    - task: UseDotNet@2
      displayName: 'Instalar .NET SDK 6.0'
      inputs:
        packageType: 'sdk'
        version: '6.0.x'  # Instala o SDK 8.0 (substitua "x" pela versão mais recente ou deixe como está)

    # Etapa 2: Restaurar pacotes NuGet
    - task: NuGetCommand@2
      displayName: 'Restaurar pacotes NuGet'
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'  # Caminho para o arquivo .sln (solução)

    # Etapa 3: Compilar solução
    - task: VSBuild@1
      displayName: 'Compilar solução'
      inputs:
        solution: '**/*.sln'  # Caminho para a solução
        msbuildArgs: '/p:Configuration=$(buildConfiguration)'  # Defina a configuração para Release
        platform: '$(buildPlatform)'  # Defina a plataforma
        configuration: '$(buildConfiguration)'

    # Etapa 4: Executar testes (opcional, remova se não precisar)
    - task: VSTest@2
      displayName: 'Executar testes'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    # Etapa 5: Publicar artefatos de build (opcional)
    - task: PublishBuildArtifacts@1
      displayName: 'Publicar Artefatos'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'  # Caminho para os artefatos
        ArtifactName: 'drop'
        publishLocation: 'Container'
