# Nome da pipeline
name: 'Calculator CI'

# Disparadores
trigger:
  branches:
    include:
      - main  # Execute a pipeline para cada commit na branch 'main'

# Variáveis
variables:
  buildConfiguration: 'Release' # Defina a configuração de build como 'Release'

# Jobs e etapas
jobs:
- job: Build
  pool:
    vmImage: 'windows-latest' # Utilize uma VM Windows

  steps:
    # Etapa 1: Configuração do .NET SDK
    - task: UseDotNet@2
      displayName: 'Instalar .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.0.x'  # Versão do .NET 8.0.x (alterar conforme necessário)
        installationPath: $(Agent.ToolsDirectory)/dotnet

    # Etapa 2: Restaurar pacotes NuGet
    - task: NuGetCommand@2
      displayName: 'Restaurar pacotes NuGet'
      inputs:
        command: 'restore'
        restoreSolution: '**/*.sln'

    # Etapa 3: Build do projeto
    - task: VSBuild@1
      displayName: 'Compilar solução'
      inputs:
        solution: '**/*.sln'
        msbuildArgs: '/p:Configuration=$(buildConfiguration)'
        platform: 'Any CPU'
        configuration: '$(buildConfiguration)'

    # Etapa 4: Executar testes (opcional)
    - task: VSTest@2
      displayName: 'Executar testes'
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    
    # Etapa 5: Publicar artefatos de build (opcional)
    - publish: $(Build.ArtifactStagingDirectory)
      displayName: 'Publicar Artefatos'
      artifact: 'drop'
